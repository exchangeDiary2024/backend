name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      POSTGRESQL_NAME: ${{ secrets.POSTGRESQL_NAME }}
      POSTGRESQL_USER: ${{ secrets.POSTGRESQL_USER }}
      POSTGRESQL_PWD: ${{ secrets.POSTGRESQL_PWD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Java 환경 세팅
      - name: Set up JDK 21 (Eclipse Temurin)
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Build Backend (Spring Boot)
        run: |
          cd server  # server 디렉토리로 이동
          ./gradlew clean build  # Gradle 빌드 수행
          
      - name: Kill Existing Application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}    # EC2 서버 IP
          username: ${{ secrets.EC2_USER }}  # EC2 사용자명
          key: ${{ secrets.EC2_KEY }}      # SSH 개인 키
          port: 22
          script: |
            ps aux | grep 'java -jar' | grep -v grep | awk '{print $2}' | xargs -r kill -9 || echo "No app running"
            
      - name: Upload JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "server/build/libs/*.jar"
          target: "/home/ec2-user/app/server/build/libs/"

      - name: Start Application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}    # EC2 서버 IP
          username: ${{ secrets.EC2_USER }}  # EC2 사용자명
          key: ${{ secrets.EC2_KEY }}      # SSH 개인 키
          port: 22
          script: |
            nohup java -jar $(ls /home/ec2-user/app/server/build/libs/*.jar | tail -n 1) --server.port=8080 > /home/ec2-user/app/app.log 2>&1 &
